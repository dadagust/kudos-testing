# Generated by Django 5.2.7 on 2025-10-12 22:42

import applications.customers.models
import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=applications.customers.models.generate_uuid7, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('legal_name', models.CharField(blank=True, max_length=255, verbose_name='Юридическое название')),
                ('inn', models.CharField(blank=True, max_length=12, verbose_name='ИНН')),
                ('kpp', models.CharField(blank=True, max_length=9, verbose_name='КПП')),
                ('ogrn', models.CharField(blank=True, max_length=13, verbose_name='ОГРН')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Телефон')),
                ('website', models.URLField(blank=True, verbose_name='Сайт')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'ordering': ('-created_at',),
                'abstract': False,
                'indexes': [models.Index(fields=['name'], name='company_name_idx'), models.Index(fields=['inn'], name='company_inn_idx')],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=applications.customers.models.generate_uuid7, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_type', models.CharField(choices=[('personal', 'Физическое лицо'), ('business', 'Юридическое лицо')], default='personal', max_length=16, verbose_name='Тип клиента')),
                ('first_name', models.CharField(blank=True, max_length=120, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=120, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=120, verbose_name='Отчество')),
                ('display_name', models.CharField(blank=True, max_length=255, verbose_name='Отображаемое имя')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Телефон')),
                ('phone_normalized', models.CharField(blank=True, help_text='Используется для поиска и уникальности', max_length=32, verbose_name='Нормализованный телефон')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='Теги')),
                ('gdpr_consent', models.BooleanField(default=False, verbose_name='Согласие на обработку данных')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to='customers.company')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=applications.customers.models.generate_uuid7, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=120, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=120, verbose_name='Фамилия')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Телефон')),
                ('phone_normalized', models.CharField(blank=True, max_length=32, verbose_name='Нормализованный телефон')),
                ('position', models.CharField(blank=True, max_length=120, verbose_name='Должность')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Основной контакт')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='customers.company')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='customers.customer')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['customer_type'], name='customer_type_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['email'], name='customer_email_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['phone_normalized'], name='customer_phone_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['owner'], name='customer_owner_idx'),
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('email'), condition=models.Q(('email__gt', '')), name='customers_customer_email_ci_unique'),
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(condition=models.Q(('phone_normalized__gt', '')), fields=('phone_normalized',), name='customers_customer_phone_unique'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['customer'], name='contact_customer_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['company'], name='contact_company_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['phone_normalized'], name='contact_phone_idx'),
        ),
    ]
